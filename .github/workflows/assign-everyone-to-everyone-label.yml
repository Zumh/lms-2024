name: Assign all collaborators to issues with 'everyone' label
on:
    schedule:
        - cron: '0 * * * *' # Every hour
    workflow_dispatch:
permissions:
    issues: write
env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
    fetchCurrentIssuesAndCollaborators:
        runs-on: ubuntu-latest
        outputs:
            issues: ${{ steps.fetch-issues.outputs.issues }}
            collaborators: ${{ steps.fetch-collaborators.outputs.collaborators }}
        steps:
            - uses: actions/checkout@v4

            - name: Fetch issues with 'everyone' label
              id: fetch-issues
              run: |
                  issues=$(gh api 'repos/${{ github.repository }}/issues?labels=everyone' | jq -c)
                  echo "issues=$issues" >> $GITHUB_OUTPUT

            - name: Fetch collaborators
              id: fetch-collaborators
              run: |
                  collaborators=$(gh api repos/${{ github.repository }}/collaborators | jq -c)
                  echo "collaborators=$collaborators" >> $GITHUB_OUTPUT

    assignCollaboratorsToIssues:
        needs: fetchCurrentIssuesAndCollaborators
        runs-on: ubuntu-latest
        strategy:
            matrix:
                issue: ${{ fromJson(needs.fetchCurrentIssuesAndCollaborators.outputs.issues) }}
                collaborator: ${{ fromJson(needs.fetchCurrentIssuesAndCollaborators.outputs.collaborators) }}
            max-parallel: 1
        steps:
            - uses: actions/checkout@v4

            - name: Assign collaborator to issue
              run: |
                  issue_number=$(echo '${{ toJson(matrix.issue) }}' | jq -r '.number')
                  collaborator=$(echo '${{ toJson(matrix.collaborator) }}' | jq -r '.login')
                  gh issue edit $issue_number --add-assignee $collaborator

    createSubissues:
        runs-on: ubuntu-latest
        needs: fetchCurrentIssuesAndCollaborators
        strategy:
            matrix:
                issue: ${{ fromJson(needs.fetchCurrentIssuesAndCollaborators.outputs.issues) }}
                collaborator: ${{ fromJson(needs.fetchCurrentIssuesAndCollaborators.outputs.collaborators) }}
            max-parallel: 1
        steps:
            - uses: actions/checkout@v4

            - name: Ensure label exists
              run: gh label create 'generated-subissue-${{ matrix.issue.id }}' --color 000000 --description 'Generated subissue label'
              env:
                  GH_TOKEN: ${{ github.token }}
              continue-on-error: true
            
            - name: Fetch subissues
              run: |
                  subissues=$(gh issue list --label 'generated-subissue-${{ matrix.issue.id }}' --state all --json assignees --jq '.[] | .assignees.[].login')
                  echo "subissues=$(echo $subissues | tr '\n' ' ')" >> $GITHUB_OUTPUT
              env:
                  GH_TOKEN: ${{ github.token }}
              id: fetchCurrentSubissues

            - name: Create subissue
              run: >-
                   gh issue create --title "${{ matrix.issue.title }}"
                   --body "${{ matrix.issue.body }}"
                   --assignee  "${{ matrix.collaborator.login }}"
                   --milestone "${{ matrix.issue.milestone.title }}"
                   --label 'generated-subissue -${{ matrix.issue.id }}'
                   > subissue.txt
              env:
                  GH_TOKEN: ${{ github.token }}
              continue-on-error: true
              id: createSubissues
              if: ${{ !contains(steps.fetchCurrentSubissues.outputs.subissues, matrix.collaborator.login) }}

            - name: Add subissue link as comment to parent issue
              run: gh issue comment "${{ matrix.issue.number }}" -b "@${{ matrix.collaborator.login }} generated-subissue $(cat subissue.txt)"
              env:
                  GH_TOKEN: ${{ github.token }}
              id: addSubissueLink
              if: ${{ !contains(steps.fetchCurrentSubissues.outputs.subissues, matrix.collaborator.login) }}